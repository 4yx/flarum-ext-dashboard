{"version":3,"sources":["webpack://@datitisev/dashboard/webpack/bootstrap","webpack://@datitisev/dashboard/./admin.js","webpack://@datitisev/dashboard/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datitisev/dashboard/./node_modules/compare-versions/index.js","webpack://@datitisev/dashboard/./node_modules/p-queue/index.js","webpack://@datitisev/dashboard/./src/components/DashboardExtensionInfoModal.js","webpack://@datitisev/dashboard/./src/components/DashboardWidgetExtensions.js","webpack://@datitisev/dashboard/./src/components/DashboardWidgetGraph.js","webpack://@datitisev/dashboard/./src/components/ExtensionUpdatesModal.js","webpack://@datitisev/dashboard/./src/index.js","webpack://@datitisev/dashboard/external \"flarum.core.compat['app']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/AdminNav']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Button']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/DashboardPage']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/DashboardWidget']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Modal']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Switch']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['extend']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['helpers/icon']\""],"names":["DashboardExtensionInfoModal","init","extension","props","className","content","isEnabled","id","app","extensionSettings","component","icon","onclick","hide","bind","name","extra","title","version","description","authors","length","map","e","join","source","url","state","children","onchange","toggle","isDismissible","enabled","JSON","parse","data","settings","extensions_enabled","includes","request","forum","attribute","method","then","enabledArr","push","splice","indexOf","stringify","m","redraw","DashboardWidgetExtensions","extensions","translator","trans","modal","show","Object","values","DashboardWidgetGraph","months","userCount","discussionCount","postCount","graphView","keys","month","ExtensionUpdatesModal","loading","needsUpdate","errors","getPackagesAndVersions","updates","transChoice","count","oldVersion","newVersion","ext","error","queue","intervalCap","interval","filter","v","startsWith","promises","package","versions","sort","latestVersion","extensionUpdates","catch","err","message","status","addAll","initializers","add","extend","prototype","items","remove"],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA,wC;;;;;;;;;;;;ACAA;AAAA;AAAe;AACf;AACA;AACA;AACA,C;;;;;;;;;;;ACJA;AACA;AACA;AACA,MAAM,IAA0C;AAChD,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,oGAAC;AACvB,GAAG,MAAM,EAIN;AACH,CAAC;;AAED;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,mBAAmB,4CAA4C;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,oCAAoC;AACrD;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA,CAAC;;;;;;;;;;;;;AC1EY;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,mBAAmB;;AAEnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,uFAAuF,oBAAoB,MAAM,2BAA2B;AAC5I;;AAEA;AACA,uFAAuF,oBAAoB,MAAM,2BAA2B;AAC5I;;AAEA;AACA,kFAAkF,iBAAiB,MAAM,wBAAwB;AACjI;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src';","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","/* global define */\n(function (root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.compareVersions = factory();\n  }\n}(this, function () {\n\n  var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n  function indexOrEnd(str, q) {\n    return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n  }\n\n  function split(v) {\n    var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n    var patchIndex = indexOrEnd(c, '-');\n    var arr = c.substring(0, patchIndex).split('.');\n    arr.push(c.substring(patchIndex + 1));\n    return arr;\n  }\n\n  function tryParse(v) {\n    return isNaN(Number(v)) ? v : Number(v);\n  }\n\n  function validate(version) {\n    if (typeof version !== 'string') {\n      throw new TypeError('Invalid argument expected string');\n    }\n    if (!semver.test(version)) {\n      throw new Error('Invalid argument not valid semver (\\''+version+'\\' received)');\n    }\n  }\n\n  return function compareVersions(v1, v2) {\n    [v1, v2].forEach(validate);\n\n    var s1 = split(v1);\n    var s2 = split(v2);\n\n    for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n      var n1 = parseInt(s1[i] || 0, 10);\n      var n2 = parseInt(s2[i] || 0, 10);\n\n      if (n1 > n2) return 1;\n      if (n2 > n1) return -1;\n    }\n\n    var sp1 = s1[s1.length - 1];\n    var sp2 = s2[s2.length - 1];\n\n    if (sp1 && sp2) {\n      var p1 = sp1.split('.').map(tryParse);\n      var p2 = sp2.split('.').map(tryParse);\n\n      for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n        if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n        if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n        if (p1[i] > p2[i]) return 1;\n        if (p2[i] > p1[i]) return -1;\n      }\n    } else if (sp1 || sp2) {\n      return sp1 ? -1 : 1;\n    }\n\n    return 0;\n  };\n\n}));\n","'use strict';\n\n// Port of lower_bound from http://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comp) {\n\tlet first = 0;\n\tlet count = array.length;\n\n\twhile (count > 0) {\n\t\tconst step = (count / 2) | 0;\n\t\tlet it = first + step;\n\n\t\tif (comp(array[it], value) <= 0) {\n\t\t\tfirst = ++it;\n\t\t\tcount -= step + 1;\n\t\t} else {\n\t\t\tcount = step;\n\t\t}\n\t}\n\n\treturn first;\n}\n\nclass PriorityQueue {\n\tconstructor() {\n\t\tthis._queue = [];\n\t}\n\n\tenqueue(run, options) {\n\t\toptions = Object.assign({\n\t\t\tpriority: 0\n\t\t}, options);\n\n\t\tconst element = {priority: options.priority, run};\n\n\t\tif (this.size && this._queue[this.size - 1].priority >= options.priority) {\n\t\t\tthis._queue.push(element);\n\t\t\treturn;\n\t\t}\n\n\t\tconst index = lowerBound(this._queue, element, (a, b) => b.priority - a.priority);\n\t\tthis._queue.splice(index, 0, element);\n\t}\n\n\tdequeue() {\n\t\treturn this._queue.shift().run;\n\t}\n\n\tget size() {\n\t\treturn this._queue.length;\n\t}\n}\n\nclass PQueue {\n\tconstructor(options) {\n\t\toptions = Object.assign({\n\t\t\tcarryoverConcurrencyCount: false,\n\t\t\tintervalCap: Infinity,\n\t\t\tinterval: 0,\n\t\t\tconcurrency: Infinity,\n\t\t\tautoStart: true,\n\t\t\tqueueClass: PriorityQueue\n\t\t}, options);\n\n\t\tif (!(typeof options.concurrency === 'number' && options.concurrency >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${options.concurrency}\\` (${typeof options.concurrency})`);\n\t\t}\n\n\t\tif (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n\t\t\tthrow new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap}\\` (${typeof options.intervalCap})`);\n\t\t}\n\n\t\tif (!(typeof options.interval === 'number' && Number.isFinite(options.interval) && options.interval >= 0)) {\n\t\t\tthrow new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval}\\` (${typeof options.interval})`);\n\t\t}\n\n\t\tthis._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n\t\tthis._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n\t\tthis._intervalCount = 0;\n\t\tthis._intervalCap = options.intervalCap;\n\t\tthis._interval = options.interval;\n\t\tthis._intervalId = null;\n\t\tthis._intervalEnd = 0;\n\t\tthis._timeoutId = null;\n\n\t\tthis.queue = new options.queueClass(); // eslint-disable-line new-cap\n\t\tthis._queueClass = options.queueClass;\n\t\tthis._pendingCount = 0;\n\t\tthis._concurrency = options.concurrency;\n\t\tthis._isPaused = options.autoStart === false;\n\t\tthis._resolveEmpty = () => {};\n\t\tthis._resolveIdle = () => {};\n\t}\n\n\tget _doesIntervalAllowAnother() {\n\t\treturn this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n\t}\n\n\tget _doesConcurrentAllowAnother() {\n\t\treturn this._pendingCount < this._concurrency;\n\t}\n\n\t_next() {\n\t\tthis._pendingCount--;\n\t\tthis._tryToStartAnother();\n\t}\n\n\t_resolvePromises() {\n\t\tthis._resolveEmpty();\n\t\tthis._resolveEmpty = () => {};\n\n\t\tif (this._pendingCount === 0) {\n\t\t\tthis._resolveIdle();\n\t\t\tthis._resolveIdle = () => {};\n\t\t}\n\t}\n\n\t_onResumeInterval() {\n\t\tthis._onInterval();\n\t\tthis._initializeIntervalIfNeeded();\n\t\tthis._timeoutId = null;\n\t}\n\n\t_intervalPaused() {\n\t\tconst now = Date.now();\n\n\t\tif (this._intervalId === null) {\n\t\t\tconst delay = this._intervalEnd - now;\n\t\t\tif (delay < 0) {\n\t\t\t\t// Act as the interval was done\n\t\t\t\t// We don't need to resume it here,\n\t\t\t\t// because it'll be resumed on line 160\n\t\t\t\tthis._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n\t\t\t} else {\n\t\t\t\t// Act as the interval is pending\n\t\t\t\tif (this._timeoutId === null) {\n\t\t\t\t\tthis._timeoutId = setTimeout(() => this._onResumeInterval(), delay);\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_tryToStartAnother() {\n\t\tif (this.queue.size === 0) {\n\t\t\t// We can clear the interval (\"pause\")\n\t\t\t// because we can redo it later (\"resume\")\n\t\t\tclearInterval(this._intervalId);\n\t\t\tthis._intervalId = null;\n\n\t\t\tthis._resolvePromises();\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!this._isPaused) {\n\t\t\tconst canInitializeInterval = !this._intervalPaused();\n\t\t\tif (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n\t\t\t\tthis.queue.dequeue()();\n\t\t\t\tif (canInitializeInterval) {\n\t\t\t\t\tthis._initializeIntervalIfNeeded();\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t_initializeIntervalIfNeeded() {\n\t\tif (this._isIntervalIgnored || this._intervalId !== null) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._intervalId = setInterval(() => this._onInterval(), this._interval);\n\t\tthis._intervalEnd = Date.now() + this._interval;\n\t}\n\n\t_onInterval() {\n\t\tif (this._intervalCount === 0 && this._pendingCount === 0) {\n\t\t\tclearInterval(this._intervalId);\n\t\t\tthis._intervalId = null;\n\t\t}\n\n\t\tthis._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n\t\twhile (this._tryToStartAnother()) {} // eslint-disable-line no-empty\n\t}\n\n\tadd(fn, options) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst run = () => {\n\t\t\t\tthis._pendingCount++;\n\t\t\t\tthis._intervalCount++;\n\n\t\t\t\ttry {\n\t\t\t\t\tPromise.resolve(fn()).then(\n\t\t\t\t\t\tval => {\n\t\t\t\t\t\t\tresolve(val);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t},\n\t\t\t\t\t\terr => {\n\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\tthis._next();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t} catch (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t\tthis._next();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.queue.enqueue(run, options);\n\t\t\tthis._tryToStartAnother();\n\t\t});\n\t}\n\n\taddAll(fns, options) {\n\t\treturn Promise.all(fns.map(fn => this.add(fn, options)));\n\t}\n\n\tstart() {\n\t\tif (!this._isPaused) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isPaused = false;\n\t\twhile (this._tryToStartAnother()) {} // eslint-disable-line no-empty\n\t}\n\n\tpause() {\n\t\tthis._isPaused = true;\n\t}\n\n\tclear() {\n\t\tthis.queue = new this._queueClass(); // eslint-disable-line new-cap\n\t}\n\n\tonEmpty() {\n\t\t// Instantly resolve if the queue is empty\n\t\tif (this.queue.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveEmpty;\n\t\t\tthis._resolveEmpty = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tonIdle() {\n\t\t// Instantly resolve if none pending and if nothing else is queued\n\t\tif (this._pendingCount === 0 && this.queue.size === 0) {\n\t\t\treturn Promise.resolve();\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst existingResolve = this._resolveIdle;\n\t\t\tthis._resolveIdle = () => {\n\t\t\t\texistingResolve();\n\t\t\t\tresolve();\n\t\t\t};\n\t\t});\n\t}\n\n\tget size() {\n\t\treturn this.queue.size;\n\t}\n\n\tget pending() {\n\t\treturn this._pendingCount;\n\t}\n\n\tget isPaused() {\n\t\treturn this._isPaused;\n\t}\n}\n\nmodule.exports = PQueue;\n","import Modal from 'flarum/components/Modal';\nimport Button from 'flarum/components/Button';\nimport icon from 'flarum/helpers/icon';\nimport Switch from 'flarum/components/Switch';\n\nexport default class DashboardExtensionInfoModal extends Modal {\n    init() {\n        super.init();\n\n        this.extension = this.props.extension;\n    }\n\n    className() {\n        return 'DashboardExtensionInfoModal Modal--large';\n    }\n\n    content() {\n        const extension = this.extension;\n        const isEnabled = this.isEnabled(extension.id);\n\n        return (\n            <div className=\"DashboardExtensionInfo\">\n                <div className=\"Modal-close App-backControl\">\n                    {app.extensionSettings[extension.id] &&\n                        Button.component({\n                            icon: 'fas fa-cog',\n                            onclick: () => app.extensionSettings[extension.id](),\n                            className: 'Button Button--icon Button--link',\n                        })}\n                    {Button.component({\n                        icon: 'fas fa-times',\n                        onclick: this.hide.bind(this),\n                        className: 'Button Button--icon Button--link',\n                    })}\n                </div>\n\n                <div className=\"DashboardExtensionInfo-Main\">\n                    <spam className=\"DashboardExtensionInfoMain-icon\" style={extension.icon}>\n                        {extension.icon ? icon(extension.icon.name) : ''}\n                    </spam>\n                    <h3 className=\"DashboardExtensionInfoMain-title\">{extension.extra['flarum-extension'].title}</h3>\n                    <span className=\"DashboardExtensionInfoMain-name\">{extension.name}</span>\n                    <span className=\"DashboardExtensionInfoMain-version\">{extension.version}</span>\n                    <p className=\"DashboardExtensionInfoMain-description\">{extension.description || ' '}</p>\n                    <p className=\"DashboardExtensionInfoMain-useful\">\n                        <p className=\"DashboardExtensionInfoMainUseful-author\">\n                            {extension.authors && extension.authors.length === 1 ? icon('fas fa-user') : icon('fas fa-users')}\n                            &nbsp;\n                            {extension.authors ? extension.authors.map(e => e.name).join(', ') : 'Unknown'}\n                        </p>\n                        <p className=\"DashboardExtensionInfoMainUseful-source\">\n                            {icon('fas fa-code')}\n                            &nbsp;\n                            {extension.source ? (\n                                <a href={extension.source.url} target=\"_blank\">\n                                    Source\n                                </a>\n                            ) : (\n                                'Unknown'\n                            )}\n                        </p>\n                    </p>\n                    <div className=\"DashboardExtensionInfoMain-enabled\">\n                        {Switch.component({\n                            state: isEnabled,\n                            children: isEnabled ? 'Enabled' : 'Disabled',\n                            onchange: this.toggle.bind(this, extension.id),\n                        })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    isDismissible() {\n        return true;\n    }\n\n    isEnabled(name) {\n        const enabled = JSON.parse(app.data.settings.extensions_enabled);\n\n        return enabled.includes(name);\n    }\n\n    toggle(id) {\n        const enabled = this.isEnabled(id);\n\n        app.request({\n            url: `${app.forum.attribute('apiUrl')}/extensions/${id}`,\n            method: 'PATCH',\n            data: { enabled: !enabled },\n        }).then(() => {\n            const enabledArr = JSON.parse(app.data.settings.extensions_enabled);\n            if (!enabled) enabledArr.push(id);\n            else enabledArr.splice(enabledArr.indexOf(id), 1);\n\n            app.data.settings.extensions_enabled = JSON.stringify(enabledArr);\n\n            m.redraw();\n        });\n    }\n}\n","import Button from 'flarum/components/Button';\nimport DashboardWidget from 'flarum/components/DashboardWidget';\nimport icon from 'flarum/helpers/icon';\n\nimport ExtensionUpdatesModal from './ExtensionUpdatesModal';\nimport DashboardExtensionInfoModal from './DashboardExtensionInfoModal';\n\nexport default class DashboardWidgetExtensions extends DashboardWidget {\n    content() {\n        const extensions = app.data.extensions;\n\n        return (\n            <div>\n                <div className=\"DashboardExtensions--Title\">\n                    <span>{app.translator.trans('core.admin.nav.extensions_button')}</span>\n\n                    {Button.component({\n                        children: icon('fas fa-upload'),\n                        className: 'Button',\n                        onclick: () => app.modal.show(new ExtensionUpdatesModal()),\n                    })}\n                </div>\n\n                <div className=\"DashboardExtensions--List\">\n                    {Object.values(extensions).map(extension => (\n                        <li\n                            className=\"DashboardExtensions--Item\"\n                            onclick={() =>\n                                app.modal.show(\n                                    new DashboardExtensionInfoModal({\n                                        extension,\n                                    })\n                                )\n                            }\n                        >\n                            <div className=\"DashboardExtensionsItem-content\">\n                                <spam className=\"DashboardExtensionsItem-icon\" style={extension.icon}>\n                                    {extension.icon ? icon(extension.icon.name) : ''}\n                                </spam>\n                                <label className=\"DashboardExtensionsItem-title\">{extension.extra['flarum-extension'].title}</label>\n                            </div>\n                        </li>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n\n    className() {\n        return 'DashboardExtensions';\n    }\n}\n","import app from 'flarum/app';\nimport DashboardWidget from 'flarum/components/DashboardWidget';\n\nexport default class DashboardWidgetGraph extends DashboardWidget {\n    init() {\n        super.init();\n\n        this.months = [\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.january'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.february'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.march'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.april'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.may'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.june'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.july'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.august'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.september'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.october'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.november'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.december'),\n        ];\n    }\n\n    content() {\n        const { userCount, discussionCount, postCount } = app.forum.attribute('datitisev-dashboard.data');\n\n        return (\n            <div className=\"DashboardGraph--Categories\">\n                <div className=\"DashboardGraph--Category Category--Users\">\n                    <span className=\"color\" />\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.users')}\n                    <br />\n                    <span className=\"number\">{userCount}</span>\n                </div>\n                <div className=\"DashboardGraph--Category Category--Discussions\">\n                    <span className=\"color\" />\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.discussions')}\n                    <br />\n                    <span className=\"number\">{discussionCount}</span>\n                </div>\n                <div className=\"DashboardGraph--Category Category--Posts\">\n                    <span className=\"color\" />\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.posts')}\n                    <br />\n                    <span className=\"number\">{postCount}</span>\n                </div>\n            </div>\n        );\n    }\n\n    className() {\n        return 'DashboardGraph';\n    }\n\n    graphView() {\n        return (\n            <div className=\"DashboardGraph--Graph\">\n                {Object.keys(this.months).map(id => {\n                    const month = months[id];\n                    return (\n                        <div className=\"DashboardGraph--Month\">\n                            <div className=\"bars\">BAR</div>\n                            <div className=\"name\">{month}</div>\n                        </div>\n                    );\n                })}\n            </div>\n        );\n    }\n}\n","import Modal from 'flarum/components/Modal';\nimport app from 'flarum/app';\nimport PQueue from 'p-queue';\nimport * as compareVersions from 'compare-versions';\n\nexport default class ExtensionUpdatesModal extends Modal {\n    init() {\n        this.loading = true;\n        this.needsUpdate = [];\n\n        this.errors = [];\n\n        this.getPackagesAndVersions();\n    }\n\n    className() {\n        return 'DashboardSettingsModal ExtensionUpdatesModal Modal--large';\n    }\n\n    title() {\n        const updates = this.needsUpdate.length;\n\n        if (updates > 0) {\n            return app.translator.transChoice('datitisev-dashboard.admin.dashboard.updates.available', updates, { count: updates });\n        }\n\n        if (this.loading) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.updates.checking');\n        } else if (updates === 0) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.updates.none');\n        }\n    }\n\n    content() {\n        return (\n            <div className=\"PermissionGrid container\">\n                <table className=\"PermissionGrid\" style={!this.errors && this.needsUpdate.length === 0 ? 'display: none' : ''}>\n                    <thead>\n                        <tr>\n                            <th>\n                                Extension\n                                {this.loading && (\n                                    <span>\n                                        &nbsp;&nbsp;\n                                        <i className=\"fas fa-circle-notch fa-spin\" />\n                                    </span>\n                                )}\n                            </th>\n                            <th>Version Installed</th>\n                            <th>New Version</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.needsUpdate).map(id => {\n                            const extension = this.needsUpdate[id];\n                            return (\n                                <tr className=\"PermissionGrid-child\">\n                                    <td>{extension.name}</td>\n                                    <td>{extension.oldVersion}</td>\n                                    <td>{extension.newVersion}</td>\n                                </tr>\n                            );\n                        })}\n\n                        {this.errors &&\n                            this.errors.map(ext => (\n                                <tr className=\"ExtensionUpdatesModal--Error PermissionGrid-child\">\n                                    <td>{ext.name}</td>\n                                    <td>{ext.version}</td>\n                                    <td>{ext.error}</td>\n                                </tr>\n                            ))}\n                    </tbody>\n                </table>\n                <div style={this.needsUpdate.length === 0 && !this.errors && !this.loading ? '' : 'display: none'}>\n                    <h3>{app.translator.trans('datitisev-dashboard.admin.dashboard.updates.none')}</h3>\n                </div>\n            </div>\n        );\n    }\n\n    getPackagesAndVersions() {\n        const queue = new PQueue({\n            intervalCap: 2,\n            interval: 500,\n        });\n        const extensions = Object.values(app.data.extensions).filter(v => !v.version.startsWith('dev'));\n\n        const promises = extensions.map(extension => () =>\n            m\n                .request({\n                    url: `https://packagist.org/packages/${extension.name}.json`,\n                })\n                .then(data => {\n                    data = data.package;\n\n                    const versions = Object.keys(data.versions)\n                        .filter(v => !v.startsWith('dev'))\n                        .sort(compareVersions);\n                    const latestVersion = versions[versions.length - 1];\n                    const version = extension.version;\n\n                    if (latestVersion && version !== latestVersion) {\n                        this.extensionUpdates = this.needsUpdate.length + 1;\n\n                        return this.needsUpdate.push({\n                            name: extension.name,\n                            oldVersion: version,\n                            newVersion: latestVersion,\n                        });\n                    }\n\n                    m.redraw();\n                })\n                .catch(err => {\n                    if (!err || typeof err !== 'object' || !err.message) return false;\n\n                    this.errors.push({\n                        name: extension.name,\n                        version: extension.version,\n                        error: err.status ? `${err.status}: ${err.message}` : err.message,\n                    });\n                })\n        );\n\n        queue.addAll(promises).then(() => (this.loading = false));\n    }\n}\n","import { extend } from 'flarum/extend';\nimport AdminNav from 'flarum/components/AdminNav';\nimport DashboardPage from 'flarum/components/DashboardPage';\n\nimport WidgetGraph from \"./components/DashboardWidgetGraph\";\nimport WidgetExtensions from \"./components/DashboardWidgetExtensions\";\n\napp.initializers.add('datitisev/dashboard', () => {\n\n    extend(AdminNav.prototype, 'items', items => {\n        items.remove('extensions');\n    });\n\n    extend(DashboardPage.prototype, 'availableWidgets', items => {\n        items.push(<WidgetGraph />);\n        items.push(<WidgetExtensions />);\n    })\n});\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/DashboardPage'];","module.exports = flarum.core.compat['components/DashboardWidget'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];"],"sourceRoot":""}