{"version":3,"sources":["webpack://@datitisev/dashboard/webpack/bootstrap","webpack://@datitisev/dashboard/./admin.js","webpack://@datitisev/dashboard/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@datitisev/dashboard/./src/changeDashboardPage.js","webpack://@datitisev/dashboard/./src/components/DashboardConfigurationModal.js","webpack://@datitisev/dashboard/./src/components/DashboardExtensionInfoModal.js","webpack://@datitisev/dashboard/./src/components/DashboardPage.js","webpack://@datitisev/dashboard/./src/components/DashboardSettingsModal.js","webpack://@datitisev/dashboard/./src/components/ExtensionUpdatesModal.js","webpack://@datitisev/dashboard/./src/components/WidgetGraph.js","webpack://@datitisev/dashboard/./src/index.js","webpack://@datitisev/dashboard/external \"flarum.core.compat['app']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/AdminNav']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Button']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/DashboardPage']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/DashboardWidget']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Modal']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Page']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/SettingsModal']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['components/Switch']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['extend']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['helpers/icon']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['utils/ItemList']\"","webpack://@datitisev/dashboard/external \"flarum.core.compat['utils/saveSettings']\""],"names":["app","routes","dashboard","path","component","DashboardConfigurationModal","init","page","props","className","content","href","replace","DashboardExtensionInfoModal","extension","isEnabled","id","icon","name","extra","title","version","description","authors","length","map","e","join","source","url","state","children","onchange","toggle","bind","enabled","JSON","parse","data","settings","extensions_enabled","indexOf","request","forum","attribute","method","then","enabledArr","push","splice","stringify","m","redraw","DashboardPage","extensions","view","Object","keys","items","section","get","translator","trans","onclick","modal","show","prototype","availableWidgets","item","add","DashboardSettingsModal","form","setting","ExtensionUpdatesModal","extensionUpdates","loading","needsUpdate","error","solution","getPackagesAndVersions","number","oldVersion","newVersion","trust","extensionNames","forEach","el","i","o","currentExtension","Promise","resolve","catch","err","message","substr","setTimeout","par","reject","DashboardWidgetGraph","months","userCount","discussionCount","postCount","graphView","month","initializers","changeDashboardPage","extensionSettings"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./admin.js\");\n","export * from './src';","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import NewDashboardPage from './components/DashboardPage';\n\nexport default function () {\n    app.routes.dashboard = {path: '/', component: NewDashboardPage.component()};\n}","import Modal from 'flarum/components/Modal';\nimport icon from 'flarum/helpers/icon';\n\nexport default class DashboardConfigurationModal extends Modal {\n\n  init() {\n    this.page = this.props.page;\n  }\n\n  className() {\n    return 'DashboardConfigurationModal Modal--large';\n  }\n\n  content() {\n    const page = app.routes[this.page.props.href.replace('/', '')];\n    return (\n        <div>\n            {new page.component.component()}\n        </div>\n    );\n  }\n\n}\n","import Modal from 'flarum/components/Modal';\nimport icon from 'flarum/helpers/icon';\nimport saveSettings from 'flarum/utils/saveSettings';\nimport Switch from 'flarum/components/Switch';\n\nexport default class DashboardExtensionInfoModal extends Modal {\n\n    init() {\n        super.init();\n\n        this.extension = this.props.extension;\n    }\n\n    className() {\n        return 'DashboardExtensionInfoModal Modal--large';\n    }\n\n    content() {\n        const extension = this.extension;\n        const isEnabled = this.isEnabled(extension.id);\n\n        return (\n            <div className=\"DashboardExtensionInfo\">\n                <div className=\"DashboardExtensionInfo-Main\">\n                    <spam className=\"DashboardExtensionInfoMain-icon\" style={extension.icon}>\n                        {extension.icon ? icon(extension.icon.name) : ''}\n                    </spam>\n                    <h3 className=\"DashboardExtensionInfoMain-title\">\n                        {extension.extra['flarum-extension'].title}\n                    </h3>\n                    <span className=\"DashboardExtensionInfoMain-name\">\n                        {extension.name}\n                    </span>\n                    <span className=\"DashboardExtensionInfoMain-version\">\n                        {extension.version}\n                    </span>\n                    <p className=\"DashboardExtensionInfoMain-description\">\n                        {extension.description || ' '}\n                    </p>\n                    <p className=\"DashboardExtensionInfoMain-useful\">\n                        <p className=\"DashboardExtensionInfoMainUseful-author\">\n                            {extension.authors && extension.authors.length == 1 ? icon('user') : icon('users')} {extension.authors ? extension.authors.map(e => e.name).join(', ') : 'Unknown'}\n                        </p>\n                        <p className=\"DashboardExtensionInfoMainUseful-source\">\n                            {icon('code')} {extension.source ? (\n                                <a href={extension.source.url} target=\"_blank\">Source</a>\n                            ) : 'Unknown'}\n                        </p>\n                    </p>\n                    <div className=\"DashboardExtensionInfoMain-enabled\">\n                        {Switch.component({\n                            state: isEnabled,\n                            children: isEnabled ? 'Enabled' : 'Disabled',\n                            onchange: this.toggle.bind(this, extension.id),\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    isEnabled(name) {\n        const enabled = JSON.parse(app.data.settings.extensions_enabled);\n\n        return enabled.indexOf(name) !== -1;\n    }\n\n    toggle(id) {\n        const enabled = this.isEnabled(id);\n\n        app.request({\n            url: app.forum.attribute('apiUrl') + '/extensions/' + id,\n            method: 'PATCH',\n            data: {enabled: !enabled}\n        }).then(() => {\n            const enabledArr = JSON.parse(app.data.settings.extensions_enabled);\n            if (!enabled) enabledArr.push(id); else enabledArr.splice(enabledArr.indexOf(id), 1);\n\n            app.data.settings.extensions_enabled = JSON.stringify(enabledArr);\n\n            m.redraw();\n        });\n\n    }\n\n}\n","import { extend } from 'flarum/extend';\nimport Page from 'flarum/components/Page';\nimport Button from 'flarum/components/Button';\nimport FlarumDashboardPage from 'flarum/components/DashboardPage';\nimport ItemList from 'flarum/utils/ItemList';\nimport icon from 'flarum/helpers/icon';\n\nimport WidgetGraph from './WidgetGraph';\nimport DashboardExtensionInfoModal from './DashboardExtensionInfoModal';\nimport DashboardConfigurationModal from './DashboardConfigurationModal';\nimport AdminNav from \"flarum/components/AdminNav\";\nimport ExtensionUpdatesModal from \"./ExtensionUpdatesModal\";\n\nexport default class DashboardPage extends Page {\n    init() {\n        this.extensions = app.data.extensions;\n\n        super.init();\n    }\n\n    view() {\n        // const pages = AdminNav.prototype.items();\n        // pages.remove('dashboard');\n        // pages.remove('extensions');\n\n        return (\n            <div className=\"DashboardPage\">\n                <div className=\"container\">\n                    <div className=\"DashboardPage--Widgets\">\n                        {Object.keys(this.items().items)\n                            .map(id => {\n                                const section = this.items().get(id);\n                                if (section) return section;\n                            })\n                        }\n                    </div>\n\n                    <div className=\"DashboardPageExtensions\">\n                        <p className=\"DashboardPageExtensions--Title\">\n                            <span>\n                                {app.translator.trans('core.admin.nav.extensions_button')}\n                            </span>\n                            \n                            {Button.component({\n                                children: icon('fas fa-sync'),\n                                className: 'Button',\n                                onclick: () => app.modal.show(new ExtensionUpdatesModal())\n                            })}\n                        </p>\n\n\n                        {Object.keys(this.extensions)\n                            .map(id => {\n                                let extension = this.extensions[id];\n                                return (\n                                    <li className=\"DashboardPageExtensions--Item\"\n                                        onclick={() => {\n                                            app.modal.show(new DashboardExtensionInfoModal({\n                                                extension,\n                                            }));\n                                        }}>\n                                        <div className=\"DashboardExtensionsItem-content\">\n                                            <spam className=\"DashboardExtensionsItem-icon\" style={extension.icon}>\n                                                {extension.icon ? icon(extension.icon.name) : ''}\n                                            </spam>\n                                            <label className=\"DashboardExtensionsItem-title\">\n                                                {extension.extra['flarum-extension'].title}\n                                            </label>\n                                        </div>\n                                    </li>\n                                )\n                            })}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    items() {\n        const items = new ItemList();\n\n        for (const item of FlarumDashboardPage.prototype.availableWidgets()) {\n            if (item.component.name === 'StatisticsWidget') continue;\n\n            items.add(item.component.name, item);\n        }\n\n        items.add('countData', <WidgetGraph/>);\n\n        return items;\n    }\n\n}\n","import SettingsModal from 'flarum/components/SettingsModal';\nimport app from 'flarum/app';\n\nexport default class DashboardSettingsModal extends SettingsModal {\n    className() {\n        return 'DashboardSettingsModal Modal--medium';\n    }\n\n    title() {\n        return app.translator.trans('datitisev-dashboard.admin.settings.title');\n    }\n\n    form() {\n        return [\n            <div className=\"Form-group\">\n                <h2>{app.translator.trans('datitisev-dashboard.admin.settings.github_heading')}</h2>\n                <label htmlFor=\"client_id\">{app.translator.trans('datitisev-dashboard.admin.settings.clientId_label')}</label>\n                <input type=\"text\" className=\"FormControl\" bidi={this.setting('datitisev-dashboard.github.client_id')}/>\n                <label htmlFor=\"client_id\">{app.translator.trans('datitisev-dashboard.admin.settings.clientSecret_label')}</label>\n                <input type=\"text\" className=\"FormControl\" bidi={this.setting('datitisev-dashboard.github.client_secret')}/>\n                <h2>{app.translator.trans('datitisev-dashboard.admin.settings.graph_heading')}</h2>\n                <label htmlFor=\"client_id\">{app.translator.trans('datitisev-dashboard.admin.settings.interval_label')}</label>\n                <input type=\"number\" className=\"FormControl\" bidi={this.setting('datitisev-dashboard.graph.dataInterval')}/>\n            </div>\n        ];\n    }\n}","import Modal from 'flarum/components/Modal';\nimport app from 'flarum/app';\n\nexport default class ExtensionUpdatesModal extends Modal {\n    \n    init () {\n        this.extensionUpdates = 0;\n        this.loading = true;\n        this.needsUpdate = [];\n        \n        this.error = null;\n        this.solution = null;\n        \n        this.getPackagesAndVersions();\n    }\n    \n    className() {\n        return 'DashboardSettingsModal ExtensionUpdatesModal Modal--large';\n    }\n    \n    title() {\n        \n        if (this.extensionUpdates > 0) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.extensionUpdates.updatesAvaliable', { number: this.extensionUpdates })\n        }\n        if (this.error) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.extensionUpdates.error');\n        }\n        \n        if (this.loading) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.extensionUpdates.checking')\n        } else if (this.extensionUpdates == 0) {\n            return app.translator.trans('datitisev-dashboard.admin.dashboard.extensionUpdates.noUpdates');\n        }\n    }\n    \n    content() {\n        return (\n            <div className=\"PermissionGrid container\">\n                <table className=\"PermissionGrid\" style={this.error || this.extensionUpdates == 0 ? 'display: none' : ''}>\n                    <thead>\n                        <tr>\n                            <th>Extension</th>\n                            <th>Version Installed</th>\n                            <th>New Version</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {Object.keys(this.needsUpdate)\n                            .map(id => {\n                                const extension = this.needsUpdate[id];\n                                return (<tr className=\"ExtensionList--Item PermissionGrid-child\">\n                                <td className=\"ExtensionListItem--Name\">{extension.name}</td>\n                                <td className=\"ExtensionListItem--Installed\">{extension.oldVersion}</td>\n                                <td className=\"ExtensionListItem--NewVersion\">{extension.newVersion}</td>\n                                </tr>)\n                            })\n                        }\n                    </tbody>\n                </table>\n                <div className={this.error ? '' : 'ExtensionUpdatesModal--Error hidden'}>\n                    <p>{m.trust(this.error)}</p>\n                    <p>{m.trust(this.solution)}</p>\n                </div>\n                <div style={this.extensionUpdates == 0 && !this.error && !this.loading ? '' : 'display: none'}>\n                    <h3>{app.translator.trans('datitisev-dashboard.admin.dashboard.extensionUpdates.noUpdates')}</h3>\n                </div>\n            </div>\n        )\n    }\n\n    getPackagesAndVersions() {\n        \n        \n        const extensions = app.data.extensions;\n        const extensionNames = Object.keys(extensions);\n        \n        \n        extensionNames.forEach((el, i, o) => {\n            \n            if (!extensions[el] || !extensions[el].source) return false;\n            \n            let currentExtension = extensions[el];\n            \n            let source = currentExtension.source.url.replace('.git', '').replace('github.com', 'api.github.com/repos');\n            \n            if (source.indexOf('github.com') >= 0) {\n                source = 'https://api.github.com/repos/' + currentExtension.name + '/tags';\n                source += '?client_id=' + app.forum.attribute('datitisev-dashboard.github.client_id') + '&client_secret=' + app.forum.attribute('datitisev-dashboard.github.client_secret');\n            } else return false;\n            \n            this.request({\n                url: source,\n                method: 'GET'\n            }).then((data) => {\n                \n                if (this.error) this.error = null;\n                \n                if (data) {\n                    let newVersion = (data && data.length) ? data[0].name : null;\n                    let version = currentExtension.version;\n                    // let version = 'some_other_version';\n                    \n                    if (newVersion && version != newVersion && version !== 'dev-master' && version != '@dev') {\n                        this.extensionUpdates = this.needsUpdate.length + 1;\n                        \n                        Promise.resolve(this.needsUpdate.push({\n                            name: currentExtension.name,\n                            oldVersion: version,\n                            newVersion: newVersion\n                        })).then(() => {\n                            if (o.length - 1 == i) {\n                                this.extensionUpdates = this.needsUpdate.length;\n                                this.loading = false;\n                                m.redraw();\n                            } else {\n                                m.redraw();\n                            }\n                        }).catch(error => {\n                            this.error = error;\n                            m.redraw();\n                        });\n                    } else {\n                        this.extensionUpdates = this.needsUpdate.length;\n                        if (o.length - 1 == i) {\n                            this.loading = false;\n                            m.redraw()\n                        } else {\n                            m.redraw();\n                        }\n                    }\n                }\n                \n                \n            }).catch((err) => {\n\n                if (!err || typeof err != 'object' || !err.message) return false;\n                \n                let error = err.message.indexOf('rate limit') >= 0 ? err.message.substr(0, 38) : err.message;\n                if (error == 'Not Found' && o.length - 1 == i) {\n                    this.loading = false;\n                    m.redraw()\n                } else if (error == 'Not Found') return false;\n                \n                let solution = err.message.indexOf('rate limit') >= 0 ? app.translator.trans('datitisev-dashboard.admin.dashboard.extensionUpdates.addClientIdAndSecret') : '';\n                \n                this.error = '<b>GitHub:</b> ' + error;\n                this.solution = solution;\n                this.loading = false;\n                m.redraw();\n            });\n        });\n        \n        \n        setTimeout(() => {\n            this.error = '';\n            this.solution = '';\n            this.extensionUpdates = 0;\n            this.needsUpdate = [];\n            this.loading = false;\n            this.getPackagesAndVersions();\n            m.redraw();\n        }, 60000)\n    }\n    \n    \n    request(par) {\n        \n        return new Promise((resolve, reject) => {\n            m.request({\n                method: par.method ? par.method : \"GET\",\n                url: par.url\n            }).then(resolve).catch(reject);\n        });\n\n    }\n    \n}\n","import app from 'flarum/app';\nimport DashboardWidget from 'flarum/components/DashboardWidget';\n\nexport default class DashboardWidgetGraph extends DashboardWidget {\n\n    content() {\n        const months = [\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.january'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.february'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.march'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.april'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.may'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.june'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.july'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.august'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.september'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.october'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.november'),\n            app.translator.trans('datitisev-dashboard.admin.dashboard.months.december')\n        ];\n        const { userCount, discussionCount, postCount } = app.forum.attribute('datitisev-dashboard.data');\n\n        return (<div className=\"DashboardGraph--Categories\">\n                <div className=\"DashboardGraph--Category Category--Users\">\n                    <span className=\"color\"></span>\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.users')}<br />\n                    <span className=\"number\">{userCount}</span>\n                </div>\n                <div className=\"DashboardGraph--Category Category--Discussions\">\n                    <span className=\"color\"></span>\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.discussions')}<br />\n                    <span className=\"number\">{discussionCount}</span>\n                </div>\n                <div className=\"DashboardGraph--Category Category--Posts\">\n                    <span className=\"color\"></span>\n                    {app.translator.trans('datitisev-dashboard.admin.dashboard.graph.posts')}<br />\n                    <span className=\"number\">{postCount}</span>\n                </div>\n            </div>)\n    }\n\n    className() {\n        return \"DashboardGraph\";\n    }\n\n    graphView() {\n\n        return (\n            <div className=\"DashboardGraph--Graph\">\n                {Object.keys(months)\n                    .map(id => {\n                            const month = months[id];\n                            return <div className=\"DashboardGraph--Month\">\n                                <div className=\"bars\">\n                                    BAR\n                                </div>\n                                <div className=\"name\">\n                                    {month}\n                                </div>\n                            </div>\n                        }\n                    )}\n\n\n            </div>\n        )\n\n    }\n\n}\n\n","import { override } from 'flarum/extend';\nimport app from 'flarum/app';\n\nimport changeDashboardPage from './changeDashboardPage';\nimport DashboardSettingsModal from './components/DashboardSettingsModal';\n\n\napp.initializers.add('datitisev/dashboard', () => {\n    changeDashboardPage();\n\n    app.extensionSettings['datitisev-dashboard'] = () => app.modal.show(new DashboardSettingsModal());\n});\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/AdminNav'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/DashboardPage'];","module.exports = flarum.core.compat['components/DashboardWidget'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['components/SettingsModal'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['utils/saveSettings'];"],"sourceRoot":""}